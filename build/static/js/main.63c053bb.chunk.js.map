{"version":3,"sources":["context/RoundContext.js","components/Round.js","js/helpers.js","components/Card.js","components/Move.js","components/Hand.js","components/Bank.js","components/Bet.js","components/Player.js","components/StartGameForm.js","data/deck.js","components/Board.js","App.js","index.js"],"names":["RoundContext","createContext","RoundProvider","props","activateRound","setState","prevState","isRoundActive","roundNum","deActivateRound","roundBet","setBet","bet","state","Provider","value","this","children","Component","Round","context","className","onClick","resetGame","contextType","renderSuitIcon","suit","getTotalValue","cards","handValue","map","card","i","Card","rank","Move","handleMove","bind","e","preventDefault","move","Hand","getPossibleMoves","moves","hand","push","totalValueFirstTwoCards","doMove","id","Bank","length","Bet","doBet","Player","handleClick","startRound","name","stacksize","hands","bets","StartGameForm","handleSubmit","handleChange","startGame","target","onSubmit","htmlFor","type","onChange","min","max","deckOfCards","fullDeck","DECK","sort","Math","random","Board","deck","gameHasStarted","player","bank","dealCard","doMoveHit","doMovePass","doMoveSplit","doMoveDouble","checkEndRound","endRound","getBankCardsTill17","console","log","playerName","playerStacksize","tempDeck","randomIndex","floor","splice","newCard","playerHands","tempHands","find","done","every","newCards","currentBankHandValue","newCardsForBank","newStacksize","dealFirstCards","dealtCardsToPlayer","dealtCardToBank","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63c053bb.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\n\nexport const RoundContext = createContext();\n\nexport class RoundProvider extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      roundNum: 0, \n      roundBet: 0, \n      isRoundActive: false \n    }\n  }\n\n  activateRound = () => {\n    this.setState(prevState => ({\n      isRoundActive: true,\n      roundNum: prevState.roundNum + 1\n    }))\n  }\n\n  deActivateRound = () => {\n    this.setState(prevState => ({\n      isRoundActive: false,\n      roundBet: 0\n    }))\n  }\n\n  setBet = (bet) => {\n    this.setState({\n      roundBet: bet\n    })\n  }\n\n  render() {\n    return (\n      <RoundContext.Provider value={{ \n        ...this.state, \n        activateRound: this.activateRound,\n        deActivateRound: this.deActivateRound,\n        setBet: this.setBet\n      }}>\n        {this.props.children}\n      </RoundContext.Provider>\n    )\n  }\n  \n}\n\n","import React, { Component } from 'react'\n\nimport { RoundContext } from \"../context/RoundContext\";\n\nimport '../styling/Round.css'\n\nclass Round extends Component {\n  static contextType = RoundContext;\n  render() {\n    const { roundNum, roundBet, isRoundActive } = this.context;\n    return (\n      <div className=\"Round\">\n        <p>Round number: {roundNum}</p>\n        <p>Bet: {roundBet}</p>\n        <p>Active: {isRoundActive ? 'active' : 'not active'}</p>\n        <button onClick={this.props.resetGame}>Start over!</button>\n      </div>\n    )\n  }\n}\n\nexport default Round;\n","import React from 'react'\nimport { GiClubs, GiSpades, GiHearts, GiDiamonds } from 'react-icons/gi'\n\nconst renderSuitIcon = (suit) => {\n\tswitch (suit) {\n\t\tcase 'hearts':\n\t\t\treturn <GiHearts className=\"Card-icon Card-icon--red\" />;\n\n\t\tcase 'spades':\n\t\t\treturn <GiSpades className=\"Card-icon\" />;\n\n\t\tcase 'clubs':\n\t\t\treturn <GiClubs className=\"Card-icon\" />;\n\n\t\tcase 'diamonds':\n\t\t\treturn <GiDiamonds className=\"Card-icon Card-icon--red\" />;\n\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nconst getTotalValue = (cards) => {\n\tlet handValue = 0;\n\tcards.map(\n\t\t(card, i) =>\n\t\t\thandValue += card.value\n\t)\n\treturn handValue;\n}\n\nexport { renderSuitIcon, getTotalValue }\n","import React from 'react'\nimport '../styling/Card.css'\nimport { renderSuitIcon } from '../js/helpers.js'\n\nfunction Card(props) {\n  return (\n    <div className=\"Card\">\n      {props.card.rank} of {renderSuitIcon(props.card.suit)} (value: {props.card.value})\n    </div>\n  )\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport '../styling/Move.css'\n\nclass Move extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleMove = this.handleMove.bind(this)\n  }\n\n  handleMove(e) {\n    e.preventDefault();\n    this.props.handleMove(this.props.move)\n  }\n\n  render() {\n    const { move } = this.props;\n    return (\n      <button className=\"Move\" onClick={this.handleMove}>{move}</button>\n    )\n  }\n}\n\nexport default Move\n","import React, { Component } from 'react'\n\nimport { RoundContext } from \"../context/RoundContext\";\n\nimport Card from './Card'\nimport Move from './Move'\n\nimport '../styling/Hand.css'\n\nimport { getTotalValue } from '../js/helpers'\n\nclass Hand extends Component {\n\n  static contextType = RoundContext;\n\n  getPossibleMoves = () => {\n    let moves = [...this.props.moves];\n    // If value of first two cards is the same:\n    if ( this.props.hand[0].value === this.props.hand[1].value ) {\n      moves.push('split');\n    }\n    // If value of first two cards together is 9, 10 or 11:\n    const totalValueFirstTwoCards = this.props.hand[0].value + this.props.hand[1].value\n    if (  totalValueFirstTwoCards === 9 || totalValueFirstTwoCards === 10 || totalValueFirstTwoCards === 11 ) {\n      moves.push('double');\n    }\n    return moves;\n  }\n\n  handleMove = (move) => {\n    this.props.doMove(move, this.props.id);\n  }\n\n  render() {\n\n    const { isRoundActive } = this.context;\n\n    const moves = (this.props.moves && isRoundActive)\n      ? <div className=\"Hand-moves\">\n        {this.getPossibleMoves().map(move => \n          <Move key={move} move={move} handleMove={this.handleMove} />\n        )}\n      </div>\n      : '';\n\n    return (\n      <div className=\"Hand\">\n        {this.props.bet &&\n          <p className=\"Hand-bet\">Bet: {this.props.bet}</p>\n        }\n        <div className=\"Hand-cards\">\n          {this.props.hand.map((card, i) => \n            <Card key={i} card={card} />\n          )}\n          <p className=\"Hand-total\">Total: {getTotalValue(this.props.hand)}</p>\n        </div>\n        {moves}\n      </div>\n    )\n  }\n}\n\nexport default Hand\n","import React from 'react'\nimport Hand from './Hand'\nimport '../styling/Bank.css'\n\nfunction Bank(props) {\n  return (\n    <div className=\"Bank\">\n      <h3>Bank</h3>\n      <div className=\"Bank-hand\">\n        <div className=\"Bank-cards\">\n          {props.hand.length !== 0 && \n            <Hand hand={props.hand} moves={false} bet={false} />\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bank\n","import React from 'react'\n\nfunction Bet(props) {\n\n  const handleBet = () => {\n    props.doBet(props.bet)\n  }\n\n  return (\n    <button className=\"Bet\" onClick={handleBet}>{props.bet}</button>\n  )\n}\n\nexport default Bet\n","import React, { Component } from 'react'\n\nimport { RoundContext } from \"../context/RoundContext\";\n\nimport Hand from './Hand'\nimport Bet from './Bet'\n\nimport '../styling/Player.css'\n\nclass Player extends Component {\n\n  static contextType = RoundContext;\n\n  handleClick = () => {\n    this.props.startRound();\n  }\n\n  render() {\n\n    const { name, stacksize, hands, moves, bets, doBet, doMove } = this.props;\n    const { roundBet, isRoundActive } = this.context;\n\n    return (\n      <div className=\"Player\">\n        <h3>Player</h3>\n        <div className=\"Player-info\">\n          <p className=\"Player-name\">Name: {name}</p>\n          <p className=\"Player-stacksize\">Stacksize: {stacksize}</p>\n        </div>\n        <div className=\"Player-hands\">\n          {hands.map(hand =>\n            <Hand key={hand.id} id={hand.id} hand={hand.cards} moves={moves} doMove={doMove} />\n          )}\n        </div>\n        {!isRoundActive &&\n          <button className=\"Player-start-round\" onClick={this.handleClick}>Start New Round</button>\n        }\n        {isRoundActive && roundBet === 0 &&\n          <div className=\"Player-bets\">\n            {bets.map(bet => \n              <Bet key={bet} bet={bet} doBet={doBet} />\n            )}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Player\n","import React, { Component } from 'react'\nimport '../styling/StartGame.css'\n\nexport default class StartGameForm extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       name: 'Roodkapje', // should be empty\n       stacksize: '1000' // should be empty\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.startGame( this.state.name, this.state.stacksize );\n    this.setState({\n      name: '',\n       stacksize: ''\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n  render() {\n    return (\n      <form className=\"StartGameForm\" onSubmit={this.handleSubmit}>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"name\">Your name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </div>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"stacksize\">Your stacksize:</label>\n          <input type=\"number\" id=\"stacksize\" name=\"stacksize\" min=\"100\" max=\"2000\" value={this.state.stacksize} onChange={this.handleChange} />\n        </div>\n        <button>Start Your Game of BlackJack!</button>\n      </form>\n    )\n  }\n}\n","const deckOfCards = [\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"A\",\n    \"value\": 11\n  }\n];\n\nconst fullDeck = [...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards];\n\nexport default fullDeck;\n","import React, { Component } from 'react'\n\nimport { RoundContext } from \"../context/RoundContext\";\n\nimport Round from './Round'\nimport Bank from './Bank'\nimport Player from './Player'\nimport StartGameForm from './StartGameForm'\n\nimport fullDeck from '../data/deck'\n\nimport '../styling/Board.css'\n\nimport { getTotalValue } from '../js/helpers'\n\n\nconst DECK = fullDeck.sort(() => 0.5 - Math.random());\n\nclass Board extends Component {\n\n  static defaultProps = {\n    bets: [10, 25, 50, 100, 200],\n    moves: ['hit', 'pass']\n  }\n\n  static contextType = RoundContext;\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deck: DECK,\n      gameHasStarted: true, // for testing purpose set to true (should be false)\n      player: {\n        id: 1,\n        name: 'Milly', // for testing purpose set to Milly (should be '')\n        stacksize: 1000, // for testing purpose set to 1000 (should be 0)\n        hands: []\n        // hands: [\n        //   { id: 0, cards: [DECK[2], DECK[3]], done: false, winner: false, bet: 100 },\n        //   { id: 1, cards: [DECK[4], DECK[5]], done: false, winner: false, bet: 100 },\n        //   { id: 2, cards: [DECK[6], DECK[7]], done: false, winner: false, bet: 100 }\n        // ]\n      },\n      bank: { hand: [] }\n      // bank: { hand: [DECK[0], DECK[1]] }\n    }\n\n    this.resetGame = this.resetGame.bind(this)\n    this.startGame = this.startGame.bind(this)\n    this.dealCard = this.dealCard.bind(this)\n    this.doMove = this.doMove.bind(this)\n    this.doMoveHit = this.doMoveHit.bind(this)\n    this.doMovePass = this.doMovePass.bind(this)\n    this.doMoveSplit = this.doMoveSplit.bind(this)\n    this.doMoveDouble = this.doMoveDouble.bind(this)\n    this.checkEndRound = this.checkEndRound.bind(this)\n    this.endRound = this.endRound.bind(this)\n    this.getBankCardsTill17 = this.getBankCardsTill17.bind(this)\n    this.startRound = this.startRound.bind(this)\n    this.doBet = this.doBet.bind(this)\n    \n  }\n\n  resetGame() {\n    console.log('reset game')\n  }\n\n  startGame( playerName, playerStacksize ) {\n    this.setState(prevState => ({\n      gameHasStarted: true,\n      player: {...prevState.player, name: playerName, stacksize: playerStacksize }\n    }))\n  }\n\n  dealCard() {\n    const tempDeck = this.state.deck;\n    const randomIndex = Math.floor(Math.random() * tempDeck.length);\n    const card = tempDeck[randomIndex];\n    tempDeck.splice(randomIndex, 1);\n    this.setState({ \n      deck: tempDeck \n    });\n    return card;\n  }\n\n  doMove(move, id) {\n    switch(move) {\n      case 'hit':\n        this.doMoveHit(id);\n        break;\n      case 'pass':\n        this.doMovePass(id);\n        break;\n      case 'split':\n        this.doMoveSplit(id);\n        break;\n      case 'double':\n        this.doMoveDouble(id);\n        break;\n      default:\n        console.log('default')\n    }\n  }\n\n  doMoveHit(id) {\n    const newCard = this.dealCard();\n    // Map through all hands, if hand has the right id, than return hand + new card:\n    // And if hand value > 21 set hand to done:\n    const playerHands = this.state.player.hands;\n    // let tempHands = playerHands.map(hand =>\n    //   hand.id === id\n    //     ? { ...hand, cards: [...hand.cards, newCard] }\n    //     : hand\n    // );\n    let tempHands = playerHands.map(function(hand) {\n      if (hand.id === id) {\n        return { ...hand, cards: [...hand.cards, newCard] }\n      } else {\n        return hand;\n      }\n    });\n\n    // if value of new tempHands is higher than 21:\n    if ( getTotalValue(tempHands.find(hand => hand.id === id).cards) > 21) {\n      // set done to true of this hand.\n      tempHands = playerHands.map(function(hand) {\n        if (hand.id === id) {\n          return { ...hand, cards: [...hand.cards, newCard], done: true }\n        } else {\n          return hand;\n        }\n      });\n    }\n\n    this.setState(prevState => ({\n      player: {...prevState.player, hands: tempHands}\n    }), () => \n      this.checkEndRound()\n    );\n  }\n\n  doMovePass(id) {\n    // Map through all hands, if hand has the right id, than set hand to done:\n    const tempHands = this.state.player.hands.map(hand =>\n      hand.id === id\n        ? { ...hand, done: true }\n        : hand\n    );\n    this.setState(prevState => ({ \n      player: {...prevState.player, hands: tempHands}\n    }), () => \n      this.checkEndRound()\n    );\n     \n  }\n\n  doMoveSplit(id) {\n    console.log('do move split')\n  }\n\n  doMoveDouble(id) {\n    console.log('do move double')\n  }\n\n  checkEndRound() {\n    let allHandsDone = this.state.player.hands.every( hand => hand.done === true );\n    if (allHandsDone) {\n      this.endRound();\n    } \n  }\n\n  getBankCardsTill17() {\n    let newCards = [];\n    let currentBankHandValue = this.state.bank.hand[0].value;\n    while (currentBankHandValue < 17) {\n      const newCard = this.dealCard();\n      // console.log(newCards);\n      // console.log(newCard);\n      newCards = [...newCards, newCard];\n      currentBankHandValue += newCard.value;\n    }\n    return newCards;\n  }\n\n  endRound() {\n    this.context.deActivateRound();\n    const newCardsForBank = this.getBankCardsTill17();\n    this.setState(prevState => ({\n      bank: { ...prevState.bank, hand: [...prevState.bank.hand, ...newCardsForBank] }\n    }))\n  }\n\n  startRound() {\n    this.context.activateRound();\n    this.setState(prevState => ({\n      player: { ...prevState.player, hands: [] },\n      bank: { ...prevState.bank, hand: [] },    \n    }))\n  }\n\n  doBet(bet) {\n    this.context.setBet(bet);\n    const newStacksize = this.state.player.stacksize - bet;\n    this.setState(prevState => ({\n      player: { ...prevState.player, stacksize: newStacksize }\n    }))\n    this.dealFirstCards();\n  }\n\n  dealFirstCards() {\n    const dealtCardsToPlayer = [this.dealCard(), this.dealCard()];\n    const dealtCardToBank = [this.dealCard()];\n    this.setState(prevState => ({\n      player: { ...prevState.player, hands: [{ id: 0, cards: dealtCardsToPlayer, done: false, bet: this.context.roundBet }] },\n      bank: { ...prevState.bank, hand: dealtCardToBank }\n    }))\n  }\n\n  render() {\n\n    const { moves, bets } = this.props;\n    const { gameHasStarted, player, bank } = this.state;\n    return (\n      <div className=\"Board\">\n        <h1>Black Jack!</h1>\n        {gameHasStarted \n        ? <div>\n            <Round resetGame={this.resetGame} />\n            <Bank hand={bank.hand} />\n            <div className=\"Board-players\">\n              <Player\n                name={player.name}\n                stacksize={player.stacksize}\n                moves={moves}\n                bets={bets}\n                doBet={this.doBet}\n                hands={player.hands}\n                doMove={this.doMove}\n                startRound={this.startRound}\n              />\n            </div>\n          </div>\n          : <StartGameForm startGame={this.startGame} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Board\n","import './styling/App.css';\nimport Board from './components/Board'\nimport { RoundProvider } from './context/RoundContext'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RoundProvider>\n        <Board />\n      </RoundProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}