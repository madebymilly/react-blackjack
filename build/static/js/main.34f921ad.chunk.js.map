{"version":3,"sources":["components/Round.js","js/helpers.js","components/Card.js","components/Move.js","components/Hand.js","components/Bank.js","components/Bet.js","components/Player.js","components/StartGameForm.js","data/deck.js","components/Board.js","App.js","index.js"],"names":["Round","props","className","roundnr","bet","onClick","resetGame","renderSuitIcon","suit","getTotalValue","cards","handValue","map","card","i","value","Card","rank","Move","handleMove","bind","e","preventDefault","this","move","Component","Hand","getPossibleMoves","moves","hand","push","totalValueFirstTwoCards","doMove","id","prevProps","prevState","roundActive","Bank","Bet","doBet","Player","handleClick","startRound","name","stacksize","hands","bets","round","active","StartGameForm","state","handleSubmit","handleChange","startGame","setState","target","onSubmit","htmlFor","type","onChange","min","max","deckOfCards","fullDeck","DECK","sort","Math","random","Board","deck","gameHasStarted","player","bank","currentRound","num","dealCard","doMoveHit","doMovePass","doMoveSplit","doMoveDouble","checkEndRound","endRound","getBankCardsTill17","console","log","playerName","playerStacksize","tempDeck","randomIndex","floor","length","splice","newCard","playerHands","tempHands","find","done","every","newCards","currentBankHandValue","newCardsForBank","newRoundNum","newStacksize","dealFirstCards","dealtCardsToPlayer","dealtCardToBank","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34f921ad.chunk.js","sourcesContent":["import React from 'react'\nimport '../styling/Round.css'\n\nfunction Round(props) {\n  return (\n    <div className=\"Round\">\n      <p>Round number: {props.roundnr}</p>\n      <p>Bet: {props.bet}</p>\n      <button onClick={props.resetGame}>Start over!</button>\n    </div>\n  )\n}\n\nexport default Round;\n","import React from 'react'\nimport { GiClubs, GiSpades, GiHearts, GiDiamonds } from 'react-icons/gi'\n\nconst renderSuitIcon = (suit) => {\n\tswitch (suit) {\n\t\tcase 'hearts':\n\t\t\treturn <GiHearts className=\"Card-icon Card-icon--red\" />;\n\n\t\tcase 'spades':\n\t\t\treturn <GiSpades className=\"Card-icon\" />;\n\n\t\tcase 'clubs':\n\t\t\treturn <GiClubs className=\"Card-icon\" />;\n\n\t\tcase 'diamonds':\n\t\t\treturn <GiDiamonds className=\"Card-icon Card-icon--red\" />;\n\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nconst getTotalValue = (cards) => {\n\tlet handValue = 0;\n\tcards.map(\n\t\t(card, i) =>\n\t\t\thandValue += card.value\n\t)\n\treturn handValue;\n}\n\nexport { renderSuitIcon, getTotalValue }\n","import React from 'react'\nimport '../styling/Card.css'\nimport { renderSuitIcon } from '../js/helpers.js'\n\nfunction Card(props) {\n  return (\n    <div className=\"Card\">\n      {props.card.rank} of {renderSuitIcon(props.card.suit)} (value: {props.card.value})\n    </div>\n  )\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport '../styling/Move.css'\n\nclass Move extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleMove = this.handleMove.bind(this)\n  }\n\n  handleMove(e) {\n    e.preventDefault();\n    this.props.handleMove(this.props.move)\n  }\n\n  render() {\n    const { move } = this.props;\n    return (\n      <button className=\"Move\" onClick={this.handleMove}>{move}</button>\n    )\n  }\n}\n\nexport default Move\n","import React, { Component } from 'react'\nimport Card from './Card'\nimport Move from './Move'\nimport '../styling/Hand.css'\nimport { getTotalValue } from '../js/helpers'\n\nclass Hand extends Component {\n  componentDidUpdate(prevProps, prevState) {\n\n  }\n  // getHandValue = () => {\n  //   let handValue = 0;\n  //   this.props.hand.map(\n  //     (card, i) =>\n  //       handValue += card.value\n  //   )\n  //   return handValue;\n  // }\n  getPossibleMoves = () => {\n    let moves = [...this.props.moves];\n    // If value of first two cards is the same:\n    if ( this.props.hand[0].value === this.props.hand[1].value ) {\n      moves.push('split');\n    }\n    // If value of first two cards together is 9, 10 or 11:\n    const totalValueFirstTwoCards = this.props.hand[0].value + this.props.hand[1].value\n    if (  totalValueFirstTwoCards === 9 || totalValueFirstTwoCards === 10 || totalValueFirstTwoCards === 11 ) {\n      moves.push('double');\n    }\n    return moves;\n  }\n  handleMove = (move) => {\n    this.props.doMove(move, this.props.id);\n  }\n  render() {\n    const moves = (this.props.moves && this.props.roundActive)\n      ? <div className=\"Hand-moves\">\n        {this.getPossibleMoves().map(move => \n          <Move key={move} move={move} handleMove={this.handleMove} />\n        )}\n      </div>\n      : '';\n    return (\n      <div className=\"Hand\">\n        {this.props.bet &&\n          <p className=\"Hand-bet\">Bet: {this.props.bet}</p>\n        }\n        <div className=\"Hand-cards\">\n          {this.props.hand.map((card, i) => \n            <Card key={i} card={card} />\n          )}\n          <p className=\"Hand-total\">Total: {getTotalValue(this.props.hand)}</p>\n        </div>\n        {moves}\n      </div>\n    )\n  }\n}\n\nexport default Hand\n","import React from 'react'\nimport Hand from './Hand'\n\nfunction Bank(props) {\n  return (\n    <div className=\"Bank\">\n      <h3>Bank</h3>\n      <div className=\"Bank-hand\">\n        <div className=\"Bank-cards\">\n          <Hand hand={props.hand} moves={false} bet={false} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bank\n","import React from 'react'\n\nfunction Bet(props) {\n\n  const handleBet = () => {\n    props.doBet(props.bet)\n  }\n\n  return (\n    <button className=\"Bet\" onClick={handleBet}>{props.bet}</button>\n  )\n}\n\nexport default Bet\n","import React, { Component } from 'react'\nimport Hand from './Hand'\nimport Bet from './Bet'\nimport '../styling/Player.css'\n\nclass Player extends Component {\n\n  handleClick = () => {\n    this.props.startRound();\n  }\n\n  render() {\n\n    const { name, stacksize, hands, moves, bets, doBet, round, doMove } = this.props;\n\n    return (\n      <div className=\"Player\">\n        <h3>Player</h3>\n        <div className=\"Player-info\">\n          <p className=\"Player-name\">Name: {name}</p>\n          <p className=\"Player-stacksize\">Stacksize: {stacksize}</p>\n        </div>\n        <div className=\"Player-hands\">\n          {hands.map(hand =>\n            <Hand key={hand.id} id={hand.id} hand={hand.cards} moves={moves} doMove={doMove} roundActive={round.active} bet={round.bet}/>\n          )}\n        </div>\n        {!round.active &&\n          <button className=\"Player-start-round\" onClick={this.handleClick}>Start New Round</button>\n        }\n        {round.active && round.bet === 0 &&\n          <div className=\"Player-bets\">\n            {bets.map(bet => \n              <Bet key={bet} bet={bet} doBet={doBet} />\n            )}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Player\n","import React, { Component } from 'react'\nimport '../styling/StartGame.css'\n\nexport default class StartGameForm extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       name: 'Roodkapje', // should be empty\n       stacksize: '1000' // should be empty\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.startGame( this.state.name, this.state.stacksize );\n    this.setState({\n      name: '',\n       stacksize: ''\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n  render() {\n    return (\n      <form className=\"StartGameForm\" onSubmit={this.handleSubmit}>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"name\">Your name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </div>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"stacksize\">Your stacksize:</label>\n          <input type=\"number\" id=\"stacksize\" name=\"stacksize\" min=\"100\" max=\"2000\" value={this.state.stacksize} onChange={this.handleChange} />\n        </div>\n        <button>Start Your Game of BlackJack!</button>\n      </form>\n    )\n  }\n}\n","const deckOfCards = [\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"A\",\n    \"value\": 11\n  }\n];\n\nconst fullDeck = [...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards];\n\nexport default fullDeck;\n","import React, { Component } from 'react'\nimport Round from './Round'\nimport Bank from './Bank'\nimport Player from './Player'\nimport StartGameForm from './StartGameForm'\nimport fullDeck from '../data/deck'\nimport '../styling/Board.css'\nimport { getTotalValue } from '../js/helpers'\n\n\nconst DECK = fullDeck.sort(() => 0.5 - Math.random());\n\nclass Board extends Component {\n  static defaultProps = {\n    bets: [10, 25, 50, 100, 200],\n    moves: ['hit', 'pass']\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deck: DECK,\n      gameHasStarted: true, // for testing purpose set to true (should be false)\n      player: {\n        id: 1,\n        name: 'Milly', // for testing purpose set to Milly (should be '')\n        stacksize: 1000, // for testing purpose set to 1000 (should be 0)\n        hands: []\n        // hands: [\n        //   { id: 0, cards: [DECK[2], DECK[3]], done: false, winner: false },\n        //   { id: 1, cards: [DECK[4], DECK[5]], done: false, winner: false },\n        //   { id: 2, cards: [DECK[6], DECK[7]], done: false, winner: false }\n        // ]\n      },\n      bank: { hand: [] },\n      // bank: { hand: [DECK[0], DECK[1]] },\n      currentRound: { num: 0, bet: 0, active: false }\n    }\n\n    this.resetGame = this.resetGame.bind(this)\n    this.startGame = this.startGame.bind(this)\n    this.dealCard = this.dealCard.bind(this)\n    this.doMove = this.doMove.bind(this)\n    this.doMoveHit = this.doMoveHit.bind(this)\n    this.doMovePass = this.doMovePass.bind(this)\n    this.doMoveSplit = this.doMoveSplit.bind(this)\n    this.doMoveDouble = this.doMoveDouble.bind(this)\n    this.checkEndRound = this.checkEndRound.bind(this)\n    this.endRound = this.endRound.bind(this)\n    this.getBankCardsTill17 = this.getBankCardsTill17.bind(this)\n    this.startRound = this.startRound.bind(this)\n    this.doBet = this.doBet.bind(this)\n    \n  }\n\n  resetGame() {\n    console.log('reset game')\n  }\n\n  startGame( playerName, playerStacksize ) {\n    this.setState(prevState => ({\n      gameHasStarted: true,\n      player: {...prevState.player, name: playerName, stacksize: playerStacksize }\n    }))\n  }\n\n  dealCard() {\n    const tempDeck = this.state.deck;\n    const randomIndex = Math.floor(Math.random() * tempDeck.length);\n    const card = tempDeck[randomIndex];\n    tempDeck.splice(randomIndex, 1);\n    this.setState({ \n      deck: tempDeck \n    });\n    return card;\n  }\n\n  doMove(move, id) {\n    switch(move) {\n      case 'hit':\n        this.doMoveHit(id);\n        break;\n      case 'pass':\n        this.doMovePass(id);\n        break;\n      case 'split':\n        this.doMoveSplit(id);\n        break;\n      case 'double':\n        this.doMoveDouble(id);\n        break;\n      default:\n        console.log('default')\n    }\n  }\n\n  doMoveHit(id) {\n    const newCard = this.dealCard();\n    // Map through all hands, if hand has the right id, than return hand + new card:\n    // And if hand value > 21 set hand to done:\n    const playerHands = this.state.player.hands;\n    // let tempHands = playerHands.map(hand =>\n    //   hand.id === id\n    //     ? { ...hand, cards: [...hand.cards, newCard] }\n    //     : hand\n    // );\n    let tempHands = playerHands.map(function(hand) {\n      if (hand.id === id) {\n        return { ...hand, cards: [...hand.cards, newCard] }\n      } else {\n        return hand;\n      }\n    });\n\n    // if value of new tempHands is higher than 21:\n    if ( getTotalValue(tempHands.find(hand => hand.id === id).cards) > 21) {\n      // set done to true of this hand.\n      tempHands = playerHands.map(function(hand) {\n        if (hand.id === id) {\n          return { ...hand, cards: [...hand.cards, newCard], done: true }\n        } else {\n          return hand;\n        }\n      });\n    }\n\n    this.setState(prevState => ({\n      player: {...prevState.player, hands: tempHands}\n    }), () => \n      this.checkEndRound()\n    );\n  }\n\n  doMovePass(id) {\n    // Map through all hands, if hand has the right id, than set hand to done:\n    const tempHands = this.state.player.hands.map(hand =>\n      hand.id === id\n        ? { ...hand, done: true }\n        : hand\n    );\n    this.setState(prevState => ({ \n      player: {...prevState.player, hands: tempHands}\n    }), () => \n      this.checkEndRound()\n    );\n     \n  }\n\n  doMoveSplit(id) {\n    console.log('do move split')\n  }\n\n  doMoveDouble(id) {\n    console.log('do move double')\n  }\n\n  checkEndRound() {\n    \n    let allHandsDone = this.state.player.hands.every( hand => hand.done === true );\n    if (allHandsDone) {\n      console.log('end round');\n      this.endRound();\n    } \n  }\n\n  getBankCardsTill17() {\n    let newCards = [];\n    let currentBankHandValue = this.state.bank.hand[0].value;\n    while (currentBankHandValue < 17) {\n      const newCard = this.dealCard();\n      console.log(newCards);\n      console.log(newCard);\n      newCards = [...newCards, newCard];\n      currentBankHandValue += newCard.value;\n    }\n    return newCards;\n  }\n\n  endRound() {\n    const newCardsForBank = this.getBankCardsTill17();\n    this.setState(prevState => ({\n      currentRound: { ...prevState.currentRound, active: false },\n      bank: { ...prevState.bank, hand: [...prevState.bank.hand, ...newCardsForBank] }\n    }))\n  }\n\n  startRound() {\n    const newRoundNum = this.state.currentRound.num + 1;\n    this.setState(prevState => ({\n      currentRound: { ...prevState.currentRound, num: newRoundNum, active: true, bet: 0 },\n      player: { ...prevState.player, hands: [] },\n      bank: { ...prevState.bank, hand: [] },    \n    }))\n  }\n\n  doBet(bet) {\n    const newStacksize = this.state.player.stacksize - bet;\n    this.setState(prevState => ({\n      currentRound: { ...prevState.currentRound, bet: bet },\n      player: { ...prevState.player, stacksize: newStacksize }\n    }))\n    this.dealFirstCards();\n  }\n\n  dealFirstCards() {\n    const dealtCardsToPlayer = [this.dealCard(), this.dealCard()];\n    const dealtCardToBank = [this.dealCard()];\n    this.setState(prevState => ({\n      player: { ...prevState.player, hands: [{ id: 0, cards: dealtCardsToPlayer, done: false }] },\n      bank: { ...prevState.bank, hand: dealtCardToBank }\n    }))\n  }\n\n  render() {\n\n    const { moves, bets } = this.props;\n    const { gameHasStarted, player, bank, currentRound: round } = this.state;\n\n    return (\n      <div className=\"Board\">\n        <h1>Black Jack!</h1>\n        {gameHasStarted \n        ? <div>\n            <Round roundnr={round.num} bet={round.bet} resetGame={this.resetGame} />\n            <Bank hand={bank.hand} />\n            <div className=\"Board-players\">\n              <Player\n                name={player.name}\n                stacksize={player.stacksize}\n                moves={moves}\n                bets={bets}\n                doBet={this.doBet}\n                hands={player.hands}\n                round={round}\n                doMove={this.doMove}\n                startRound={this.startRound}\n              />\n            </div>\n          </div>\n          : <StartGameForm startGame={this.startGame} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Board\n","import './styling/App.css';\nimport Board from './components/Board'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}