{"version":3,"sources":["js/helpers.js","context/RoundContext.js","context/PlayerContext.js","components/Round.js","components/Card.js","components/Move.js","components/Hand.js","components/Bank.js","components/Bet.js","components/Player.js","components/StartGameForm.js","data/deck.js","components/Board.js","App.js","index.js"],"names":["renderSuitIcon","suit","className","getTotalValue","cards","handValue","map","card","i","value","storeToLocalStorage","key","window","localStorage","setItem","JSON","stringify","getLocalStorage","parse","getItem","RoundContext","createContext","RoundProvider","props","restart","setState","isRoundActive","roundNum","roundBet","activateRound","prevState","state","deActivateRound","setBet","bet","Provider","this","children","Component","withRoundContext","Consumer","roundContext","PlayerContext","PlayerProvider","setPlayerInfo","name","stack","playerStack","playerName","updateStack","amount","setHands","hands","checkEndRound","playerHands","playerId","withPlayerContext","playerContext","onClick","resetGame","Card","rank","Move","handleMove","bind","e","preventDefault","move","getPossibleMoves","moves","hand","push","totalValueFirstTwoCards","doMove","id","done","result","winnings","newMoves","showWinnings","Bank","length","Bet","doBet","handleClick","startRound","bets","StartGameForm","stacksize","handleSubmit","handleChange","startGame","target","onSubmit","htmlFor","type","onChange","min","max","deckOfCards","fullDeck","DECK","sort","Math","random","Board","deck","gameHasStarted","bank","dealCard","doMoveHit","doMovePass","doMoveSplit","doMoveDouble","getBankCardsTill17","checkWinnings","endRound","clear","tempDeck","randomIndex","floor","splice","newCard","tempHands","find","currentBet","secondCard","console","log","newHand","newCards","currentBankHandValue","totalBank","forEach","totalHand","winAmount","tieAmount","every","newCardsForBank","dealFirstCards","dealtCardToBank","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efa7b438.chunk.js","sourcesContent":["import React from 'react'\nimport { GiClubs, GiSpades, GiHearts, GiDiamonds } from 'react-icons/gi'\n\nexport const renderSuitIcon = (suit) => {\n\tswitch (suit) {\n\t\tcase 'hearts':\n\t\t\treturn <GiHearts className=\"Card-icon Card-icon--red\" />;\n\n\t\tcase 'spades':\n\t\t\treturn <GiSpades className=\"Card-icon\" />;\n\n\t\tcase 'clubs':\n\t\t\treturn <GiClubs className=\"Card-icon\" />;\n\n\t\tcase 'diamonds':\n\t\t\treturn <GiDiamonds className=\"Card-icon Card-icon--red\" />;\n\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport const getTotalValue = (cards) => {\n\tlet handValue = 0;\n\tcards.map(\n\t\t(card, i) =>\n\t\t\thandValue += card.value\n\t)\n\treturn handValue;\n}\n\nexport function storeToLocalStorage( key, value ) {\n  window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getLocalStorage( key ) {\n\treturn JSON.parse(window.localStorage.getItem(key))\n}\n","import React, { Component, createContext } from \"react\";\nimport { storeToLocalStorage, getLocalStorage } from '../js/helpers'\n\nexport const RoundContext = createContext();\n\nexport class RoundProvider extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      roundNum: getLocalStorage('roundNum') || 0, \n      roundBet: 0, \n      isRoundActive: false \n    }\n  }\n\n  restart = () => {\n    this.setState({\n      isRoundActive: false,\n      roundNum: 0,\n      roundBet: 0\n    })\n  }\n\n  activateRound = () => {\n    this.setState(prevState => ({\n      isRoundActive: true,\n      roundNum: prevState.roundNum + 1\n    }), () =>\n      storeToLocalStorage( 'roundNum', this.state.roundNum)\n    )\n  }\n\n  deActivateRound = () => {\n    this.setState({\n      isRoundActive: false,\n      roundBet: 0\n    })\n  }\n\n  setBet = (bet) => {\n    this.setState({\n      roundBet: bet\n    })\n  }\n\n  render() {\n    return (\n      <RoundContext.Provider value={{ \n        ...this.state, \n        activateRound: this.activateRound,\n        deActivateRound: this.deActivateRound,\n        setBet: this.setBet,\n        restart: this.restart\n      }}>\n        {this.props.children}\n      </RoundContext.Provider>\n    )\n  }\n  \n}\n\n// Higher Order Component:\nexport const withRoundContext = Component => props => (\n  <RoundContext.Consumer>\n    {value => <Component roundContext={value} {...props} />}\n  </RoundContext.Consumer> \n)\n\n","import React, { Component, createContext } from \"react\";\nimport { storeToLocalStorage, getLocalStorage } from \"../js/helpers\";\n\nexport const PlayerContext = createContext();\n\nexport class PlayerProvider extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      playerId: 1,\n      playerName: getLocalStorage('playerName') || '',\n      playerStack: getLocalStorage('playerStack') || 0,\n      playerHands: []\n      // playerHands: [\n      //   { id: 0, cards: [DECK[2], DECK[3]], done: false, winner: false, bet: 100 },\n      //   { id: 1, cards: [DECK[4], DECK[5]], done: false, winner: false, bet: 100 },\n      //   { id: 2, cards: [DECK[6], DECK[7]], done: false, winner: false, bet: 100 }\n      // ]\n    }\n  }\n\n  setPlayerInfo = (name, stack) => {\n    this.setState({\n      playerStack: stack,\n      playerName: name\n    }, () => {\n      storeToLocalStorage( 'playerName', name );\n      storeToLocalStorage( 'playerStack', stack );\n    })\n  }\n\n  updateStack = (amount) => {\n    this.setState(prevState => ({\n      playerStack: prevState.playerStack - amount\n    }), () => {\n      storeToLocalStorage( 'playerStack', this.state.playerStack )\n    })\n  }\n\n  setHands = (hands, checkEndRound) => {\n    this.setState({\n      playerHands: hands\n    }, () =>\n      checkEndRound && checkEndRound()\n    );\n  }\n\n  render() {\n    return (\n      <PlayerContext.Provider value={{ \n        ...this.state, \n        setPlayerInfo: this.setPlayerInfo,\n        updateStack: this.updateStack,\n        setHands: this.setHands\n      }}>\n        {this.props.children}\n      </PlayerContext.Provider>\n    )\n  }\n  \n}\n\n// Higher Order Component:\nexport const withPlayerContext = Component => props => (\n  <PlayerContext.Consumer>\n    {value => <Component playerContext={value} {...props} />}\n  </PlayerContext.Consumer> \n)\n\n","import React, { Component } from 'react'\n\nimport { withRoundContext } from \"../context/RoundContext\";\n\nimport '../styling/Round.css'\n\nclass Round extends Component {\n  render() {\n    const { roundNum, roundBet, isRoundActive } = this.props.roundContext;\n    return (\n      <div className=\"Round\">\n        <p>Round number: {roundNum}</p>\n        {/* {<p>Total bet: {roundBet}</p>} */}\n        {/* <p>{isRoundActive ? 'is active' : 'is not active'}</p> */}\n        <button onClick={this.props.resetGame}>Start over!</button>\n      </div>\n    )\n  }\n}\n\nexport default withRoundContext(Round);\n","import React from 'react'\nimport '../styling/Card.css'\nimport { renderSuitIcon } from '../js/helpers.js'\n\nfunction Card(props) {\n  return (\n    <div className=\"Card\">\n      {props.card.rank} of {renderSuitIcon(props.card.suit)} (value: {props.card.value})\n    </div>\n  )\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport '../styling/Move.css'\n\nclass Move extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleMove = this.handleMove.bind(this)\n  }\n\n  handleMove(e) {\n    e.preventDefault();\n    this.props.handleMove(this.props.move)\n  }\n\n  render() {\n    const { move } = this.props;\n    return (\n      <button className=\"Move\" onClick={this.handleMove}>{move}</button>\n    )\n  }\n}\n\nexport default Move\n","import React, { Component } from 'react'\n\nimport { withRoundContext } from \"../context/RoundContext\";\n\nimport Card from './Card'\nimport Move from './Move'\n\nimport '../styling/Hand.css'\n\nimport { getTotalValue } from '../js/helpers'\n\nclass Hand extends Component {\n\n  getPossibleMoves = () => {\n    let moves = [...this.props.moves];\n    // If value of first two cards is the same:\n    if ( this.props.hand[0].value === this.props.hand[1].value ) {\n      moves.push('split');\n    }\n    // If value of first two cards together is 9, 10 or 11:\n    const totalValueFirstTwoCards = this.props.hand[0].value + this.props.hand[1].value\n    if (  totalValueFirstTwoCards === 9 || totalValueFirstTwoCards === 10 || totalValueFirstTwoCards === 11 ) {\n      moves.push('double');\n    }\n    return moves;\n  }\n\n  handleMove = (move) => {\n    this.props.doMove(move, this.props.id);\n  }\n\n  render() {\n    const { hand, bet, moves, done, result, winnings } = this.props;\n    const { isRoundActive } = this.props.roundContext;\n    const newMoves = (moves && isRoundActive && !done)\n      ? <div className=\"Hand-moves\">\n        {this.getPossibleMoves().map(move => \n          <Move key={move} move={move} handleMove={this.handleMove} />\n        )}\n      </div>\n      : '';\n    const showWinnings = () => {\n      if (!isRoundActive && done) {\n        switch(result) {\n          case 'win':\n            return `WIN: ${winnings}! 😄`;\n          case 'lose':\n            return 'LOST 😓';\n          case 'tie':\n            return `TIE: ${winnings} 😅`;\n          default:\n            break;\n        }\n      }\n    }\n    return (\n      <div className=\"Hand\">\n        <div className=\"Hand-bet\">\n          Bet: {bet}\n        </div>\n        <div className=\"Hand-cards\">\n          {hand.map((card, i) => \n            <Card key={i} card={card} />\n          )}\n          <p className=\"Hand-total\">Total: {getTotalValue(hand)}</p>\n          <p><strong>{showWinnings()}</strong></p>\n        </div>\n        {newMoves}\n      </div>\n    )\n  }\n}\n\nexport default withRoundContext(Hand);\n","import React from 'react'\nimport Hand from './Hand'\nimport '../styling/Bank.css'\n\nfunction Bank(props) {\n  return (\n    <div className=\"Bank\">\n      <h3>Bank</h3>\n      <div className=\"Bank-hand\">\n        <div className=\"Bank-cards\">\n          {props.hand.length !== 0 && \n            <Hand hand={props.hand} moves={false} bet={false} />\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bank\n","import React from 'react'\n\nfunction Bet(props) {\n\n  const handleBet = () => {\n    props.doBet(props.bet)\n  }\n\n  return (\n    <button className=\"Bet\" onClick={handleBet}>{props.bet}</button>\n  )\n}\n\nexport default Bet\n","import React, { Component } from 'react'\n\nimport { withRoundContext } from \"../context/RoundContext\";\nimport { withPlayerContext } from '../context/PlayerContext'\n\nimport Hand from './Hand'\nimport Bet from './Bet'\n\nimport '../styling/Player.css'\n\nclass Player extends Component {\n\n  handleClick = () => {\n    this.props.startRound();\n  }\n\n  render() {\n\n    const { moves, bets, doBet, doMove } = this.props;\n    const { roundBet, isRoundActive } = this.props.roundContext;\n    const { playerName, playerStack, playerHands } = this.props.playerContext;\n\n    return (\n      <div className=\"Player\">\n        <h3>Player</h3>\n        <div className=\"Player-info\">\n          <p className=\"Player-name\">Name: {playerName}</p>\n          <p className=\"Player-stacksize\">Stacksize: {playerStack}</p>\n        </div>\n        <div className=\"Player-hands\">\n          {playerHands.map(hand =>\n            <Hand \n              key={hand.id} \n              id={hand.id} \n              hand={hand.cards} \n              bet={hand.bet} \n              result={hand.result} \n              done={hand.done} \n              winnings={hand.winnings} \n              moves={moves} \n              doMove={doMove} \n            />\n          )}\n        </div>\n        {!isRoundActive &&\n          <button className=\"Player-start-round\" onClick={this.handleClick}>Start New Round</button>\n        }\n        {isRoundActive && roundBet === 0 &&\n          <div className=\"Player-bets\">\n            {bets.map(bet => \n              <Bet key={bet} bet={bet} doBet={doBet} />\n            )}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRoundContext(withPlayerContext(Player));\n","import React, { Component } from 'react'\nimport '../styling/StartGame.css'\n\nexport default class StartGameForm extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       name: '',\n       stacksize: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.startGame( this.state.name, this.state.stacksize );\n    this.setState({\n        name: '',\n        stacksize: ''\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n  render() {\n    return (\n      <form className=\"StartGameForm\" onSubmit={this.handleSubmit}>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"name\">Your name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </div>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"stacksize\">Your stacksize:</label>\n          <input type=\"number\" id=\"stacksize\" name=\"stacksize\" min=\"100\" max=\"2000\" value={this.state.stacksize} onChange={this.handleChange} />\n        </div>\n        <button>Start Your Game of BlackJack!</button>\n      </form>\n    )\n  }\n}\n","const deckOfCards = [\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"A\",\n    \"value\": 11\n  }\n];\n\nconst fullDeck = [...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards];\n\nexport default fullDeck;\n","import React, { Component } from 'react'\n\nimport { withRoundContext } from \"../context/RoundContext\";\nimport { withPlayerContext } from '../context/PlayerContext'\n\nimport Round from './Round'\nimport Bank from './Bank'\nimport Player from './Player'\nimport StartGameForm from './StartGameForm'\n\nimport fullDeck from '../data/deck'\n\nimport '../styling/Board.css'\n\nimport { getTotalValue } from '../js/helpers'\n\n\nconst DECK = fullDeck.sort(() => 0.5 - Math.random());\n\nclass Board extends Component {\n\n  static defaultProps = {\n    bets: [10, 25, 50, 100, 200],\n    moves: ['hit', 'pass']\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deck: DECK,\n      gameHasStarted: false, // for testing purpose set to true (should be false)\n      bank: { hand: [] }\n    }\n\n    this.resetGame = this.resetGame.bind(this)\n    this.startGame = this.startGame.bind(this)\n    this.dealCard = this.dealCard.bind(this)\n    this.doMove = this.doMove.bind(this)\n    this.doMoveHit = this.doMoveHit.bind(this)\n    this.doMovePass = this.doMovePass.bind(this)\n    this.doMoveSplit = this.doMoveSplit.bind(this)\n    this.doMoveDouble = this.doMoveDouble.bind(this)\n    this.getBankCardsTill17 = this.getBankCardsTill17.bind(this)\n    this.checkWinnings = this.checkWinnings.bind(this)\n    this.checkEndRound = this.checkEndRound.bind(this)\n    this.endRound = this.endRound.bind(this)\n    this.startRound = this.startRound.bind(this)\n    this.doBet = this.doBet.bind(this)\n    \n  }\n\n  resetGame() {\n    window.localStorage.clear()\n    this.props.playerContext.setPlayerInfo( '', '' );\n    this.props.playerContext.setHands([]);\n    this.props.roundContext.restart();\n    this.setState({\n      gameHasStarted: false,\n    })\n  }\n\n  startGame( playerName, playerStack ) {\n    this.props.playerContext.setPlayerInfo( playerName, playerStack );\n    this.setState({\n      gameHasStarted: true,\n    })\n  }\n\n  dealCard() {\n    const tempDeck = this.state.deck;\n    const randomIndex = Math.floor(Math.random() * tempDeck.length);\n    const card = tempDeck[randomIndex];\n    tempDeck.splice(randomIndex, 1);\n    this.setState({ \n      deck: tempDeck \n    });\n    return card;\n  }\n\n  doMove(move, id) {\n    switch(move) {\n      case 'hit':\n        this.doMoveHit(id);\n        break;\n      case 'pass':\n        this.doMovePass(id);\n        break;\n      case 'split':\n        this.doMoveSplit(id);\n        break;\n      case 'double':\n        this.doMoveDouble(id);\n        break;\n      default:\n        break;\n    }\n  }\n\n  doMoveHit(id) {\n    const newCard = this.dealCard();\n    const playerHands = this.props.playerContext.playerHands;\n\n    // Map through all hands, if hand has the right id, than return hand + new card:\n    let tempHands = playerHands.map(function(hand) {\n      if (hand.id === id) {\n        return { ...hand, cards: [...hand.cards, newCard] }\n      } else {\n        return hand;\n      }\n    });\n\n    // If hand value > 21 set hand to done & lose:\n    if ( getTotalValue(tempHands.find(hand => hand.id === id).cards) > 21) {\n      tempHands = playerHands.map(function(hand) {\n        if (hand.id === id) {\n          return { ...hand, cards: [...hand.cards, newCard], done: true, result: 'lose' }\n        } else {\n          return hand;\n        }\n      });\n    }\n\n    this.props.playerContext.setHands(tempHands, this.checkEndRound);\n  }\n\n  doMovePass(id) {\n    // Map through all hands, if hand has the right id, than set hand to done:\n    const tempHands = this.props.playerContext.playerHands.map(hand =>\n      hand.id === id\n        ? { ...hand, done: true }\n        : hand\n    );\n\n    this.props.playerContext.setHands(tempHands, this.checkEndRound);\n  }\n\n  doMoveSplit(id) {\n    const { playerHands, setHands, updateStack } = this.props.playerContext;\n    const tempHands = playerHands;\n    const currentBet = playerHands[id].bet;\n    const secondCard = playerHands[id].cards[1];\n    console.log(secondCard);\n    // create a new hand for the player.\n    // move second card from this hand to next hand.\n    const newHand = { id: id+1, cards: [secondCard, this.dealCard()], done: false, bet: currentBet, result: null };\n    tempHands[id].cards.splice(1);\n    tempHands[id].cards.push(this.dealCard());\n    tempHands.push(newHand);\n\n    // update stack:\n    updateStack(currentBet);\n    \n    setHands( tempHands );\n\n    \n  }\n\n  doMoveDouble(id) {\n    const newCard = this.dealCard();\n    const { playerHands } = this.props.playerContext;\n\n    // Map through all hands, if hand has the right id, than return hand + new card:\n    // also set hand to done (only one card can be added when double)\n    let tempHands = playerHands.map(function(hand) {\n      if (hand.id === id) {\n        return { ...hand, cards: [...hand.cards, newCard], done: true, bet: hand.bet * 2 }\n      } else {\n        return hand;\n      }\n    });\n\n    this.props.playerContext.setHands(tempHands, this.checkEndRound);\n  }\n\n  getBankCardsTill17() {\n    let newCards = [];\n    let currentBankHandValue = this.state.bank.hand[0].value;\n    while (currentBankHandValue < 17) {\n      const newCard = this.dealCard();\n      newCards = [...newCards, newCard];\n      currentBankHandValue += newCard.value;\n    }\n    return newCards;\n  }\n\n  checkWinnings() {\n    const { playerHands, setHands, updateStack } = this.props.playerContext;\n    const tempHands = playerHands;\n\n    const totalBank = getTotalValue(this.state.bank.hand);\n\n    let amount = 0;\n\n    // loop trough all hands:\n    tempHands.forEach(hand => {\n      const totalHand = getTotalValue(hand.cards);\n      const winAmount = hand.bet * 2;\n      const tieAmount = hand.bet;\n      if ( hand.result === null && hand.done ) {\n        if ( totalBank > 21 ) {\n          hand.result = 'win';\n          hand.winnings = amount = winAmount;\n        } else if ( totalBank === totalHand ) {\n          hand.result = 'tie';\n          hand.winnings = amount = tieAmount;\n        } else if ( totalBank < totalHand ) {\n          hand.result = 'win';\n          hand.winnings = amount = winAmount;\n\n        } else {\n          hand.result = 'lose';\n        }\n      };\n      updateStack(-amount);\n    });\n    setHands(tempHands);   \n  }\n\n  checkEndRound() {\n    let allHandsDone = this.props.playerContext.playerHands.every( hand => hand.done === true );\n    if (allHandsDone) {\n      this.endRound();\n    } \n  }\n\n  endRound() {\n    this.props.roundContext.deActivateRound();\n    const newCardsForBank = this.getBankCardsTill17();\n    this.setState(prevState => ({\n      bank: { ...prevState.bank, hand: [...prevState.bank.hand, ...newCardsForBank] }\n    }), () => {\n      this.checkWinnings();\n    })\n  }\n\n  startRound() {\n    this.props.roundContext.activateRound();\n    this.props.playerContext.setHands([]);\n    this.setState(prevState => ({\n      bank: { ...prevState.bank, hand: [] },    \n    }))\n  }\n\n  doBet(bet) {\n    this.props.roundContext.setBet(bet);\n    this.props.playerContext.updateStack(bet);\n    this.dealFirstCards(bet);\n  }\n\n  dealFirstCards(bet) {\n    //const dealtCardsToPlayer = [this.dealCard(), this.dealCard()];\n    const dealtCardsToPlayer = [{rank: 5, suit: 'clubs', value: 5}, {rank: 5, suit: 'hearts', value: 5}];\n    const dealtCardToBank = [this.dealCard()];\n    this.props.playerContext.setHands([{ id: 0, cards: dealtCardsToPlayer, done: false, bet: bet, result: null }]);\n    this.setState(prevState => ({\n      bank: { ...prevState.bank, hand: dealtCardToBank }\n    }))\n  }\n\n  render() {\n\n    const { moves, bets } = this.props;\n    const { bank } = this.state;\n    const { playerName, playerStack } = this.props.playerContext;\n\n    return (\n      <div className=\"Board\">\n        <h1>Black Jack!</h1>\n        {playerName && playerStack !== 0\n        ? <div>\n            <Round resetGame={this.resetGame} />\n            <Bank hand={bank.hand} />\n            <div className=\"Board-players\">\n              <Player\n                moves={moves}\n                bets={bets}\n                doBet={this.doBet}\n                doMove={this.doMove}\n                startRound={this.startRound}\n              />\n            </div>\n          </div>\n          : <StartGameForm startGame={this.startGame} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRoundContext(withPlayerContext(Board));\n","import './styling/App.css';\nimport Board from './components/Board'\nimport { RoundProvider } from './context/RoundContext'\nimport { PlayerProvider } from './context/PlayerContext'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RoundProvider>\n        <PlayerProvider>\n          <Board />\n        </PlayerProvider>\n      </RoundProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}