{"version":3,"sources":["components/Round.js","js/helpers.js","components/Card.js","components/Move.js","components/Hand.js","components/Bank.js","components/Bet.js","components/Player.js","components/StartGameForm.js","data/deck.js","components/Board.js","App.js","index.js"],"names":["Round","props","className","roundnr","bet","onClick","resetGame","renderSuitIcon","suit","Card","card","rank","value","Move","handleMove","bind","e","preventDefault","this","move","Component","Hand","getHandValue","handValue","hand","map","i","getPossibleMoves","moves","push","totalValueFirstTwoCards","doMove","id","roundActive","Bank","Bet","doBet","Player","name","stacksize","hands","bets","cards","StartGameForm","state","handleSubmit","handleChange","startGame","setState","target","onSubmit","htmlFor","type","onChange","min","max","deckOfCards","fullDeck","DECK","sort","Math","random","Board","deck","gameHasStarted","player","bank","currentRound","num","active","dealCard","doMoveHit","doMovePass","doMoveSplit","doMoveDouble","endRound","startRound","console","log","playerName","playerStacksize","prevState","tempDeck","randomIndex","floor","length","splice","newCard","tempHands","newRoundNum","dealtCardsToPlayer","dealtCardToBank","newStacksize","round","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.888ebed8.chunk.js","sourcesContent":["import React from 'react'\nimport '../styling/Round.css'\n\nfunction Round(props) {\n  return (\n    <div className=\"Round\">\n      <p>Round number: {props.roundnr}</p>\n      <p>Bet: {props.bet}</p>\n      <button onClick={props.resetGame}>Start over!</button>\n    </div>\n  )\n}\n\nexport default Round;\n","import React from 'react'\nimport { GiClubs, GiSpades, GiHearts, GiDiamonds } from 'react-icons/gi'\n\nconst renderSuitIcon = (suit) => {\n\tswitch (suit) {\n\t\tcase 'hearts':\n\t\t\treturn <GiHearts className=\"Card-icon Card-icon--red\" />;\n\n\t\tcase 'spades':\n\t\t\treturn <GiSpades className=\"Card-icon\" />;\n\n\t\tcase 'clubs':\n\t\t\treturn <GiClubs className=\"Card-icon\" />;\n\n\t\tcase 'diamonds':\n\t\t\treturn <GiDiamonds className=\"Card-icon Card-icon--red\" />;\n\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\nexport { renderSuitIcon }\n","import React from 'react'\nimport '../styling/Card.css'\nimport { renderSuitIcon } from '../js/helpers.js'\n\nfunction Card(props) {\n  return (\n    <div className=\"Card\">\n      {props.card.rank} of {renderSuitIcon(props.card.suit)} (value: {props.card.value})\n    </div>\n  )\n}\n\nexport default Card\n","import React, { Component } from 'react'\nimport '../styling/Move.css'\n\nclass Move extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleMove = this.handleMove.bind(this)\n  }\n\n  handleMove(e) {\n    e.preventDefault();\n    this.props.handleMove(this.props.move)\n  }\n\n  render() {\n    const { move } = this.props;\n    return (\n      <button className=\"Move\" onClick={this.handleMove}>{move}</button>\n    )\n  }\n}\n\nexport default Move\n","import React, { Component } from 'react'\nimport Card from './Card'\nimport Move from './Move'\nimport '../styling/Hand.css'\n\nclass Hand extends Component {\n  getHandValue = () => {\n    let handValue = 0;\n    this.props.hand.map(\n      (card, i) =>\n        handValue += card.value\n    )\n    return handValue;\n  }\n  getPossibleMoves = () => {\n    let moves = [...this.props.moves];\n    // if value of first two cards is the same:\n    if ( this.props.hand[0].value === this.props.hand[1].value ) {\n      moves.push('split');\n    }\n    // if value of first two cards together is 9, 10 or 11:\n    const totalValueFirstTwoCards = this.props.hand[0].value + this.props.hand[1].value\n    if (  totalValueFirstTwoCards === 9 || totalValueFirstTwoCards === 10 || totalValueFirstTwoCards === 11 ) {\n      moves.push('double');\n    }\n    return moves;\n  }\n  handleMove = (move) => {\n    this.props.doMove(move, this.props.id);\n  }\n  render() {\n    const moves = (this.props.moves && this.props.roundActive)\n      ? <div className=\"Hand-moves\">\n        {this.getPossibleMoves().map(move => \n          <Move key={move} move={move} handleMove={this.handleMove} />\n        )}\n      </div>\n      : '';\n    return (\n      <div className=\"Hand\">\n        <div className=\"Hand-cards\">\n          {this.props.hand.map((card, i) => \n            <Card key={i} card={card} />\n          )}\n          <p className=\"Hand-total\">Total: {this.getHandValue()}</p>\n        </div>\n        {moves}\n      </div>\n    )\n  }\n}\n\nexport default Hand\n","import React from 'react'\nimport Hand from './Hand'\n\nfunction Bank(props) {\n  return (\n    <div className=\"Bank\">\n      <h3>Bank</h3>\n      <div className=\"Bank-hand\">\n        <div className=\"Bank-cards\">\n          <Hand hand={props.hand} moves={false} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bank\n","import React from 'react'\n\nfunction Bet(props) {\n\n  const handleBet = () => {\n    props.doBet(props.bet)\n  }\n\n  return (\n    <button className=\"Bet\" onClick={handleBet}>{props.bet}</button>\n  )\n}\n\nexport default Bet\n","import React, { Component } from 'react'\nimport Hand from './Hand'\nimport Bet from './Bet'\nimport '../styling/Player.css'\n\nclass Player extends Component {\n\n  render() {\n\n    const { name, stacksize, hands, moves, bets, doBet, roundActive, doMove } = this.props;\n\n    return (\n      <div className=\"Player\">\n        <h3>Player</h3>\n        <div className=\"Player-info\">\n          <p className=\"Player-name\">Name: {name}</p>\n          <p className=\"Player-stacksize\">Stacksize: {stacksize}</p>\n        </div>\n        <div className=\"Player-hands\">\n          {hands.map(hand =>\n            <Hand key={hand.id} id={hand.id} hand={hand.cards} moves={moves} doMove={doMove} roundActive={roundActive}/>\n          )}\n        </div>\n        {!roundActive &&\n          <div className=\"Player-bets\">\n            {bets.map(bet => \n              <Bet key={bet} bet={bet} doBet={doBet} />\n            )}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default Player\n","import React, { Component } from 'react'\nimport '../styling/StartGame.css'\n\nexport default class StartGameForm extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       name: 'Roodkapje', // should be empty\n       stacksize: '1000' // should be empty\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.startGame( this.state.name, this.state.stacksize );\n    this.setState({\n      name: '',\n       stacksize: ''\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n  render() {\n    return (\n      <form className=\"StartGameForm\" onSubmit={this.handleSubmit}>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"name\">Your name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </div>\n        <div className=\"StartGameForm-input\">\n          <label htmlFor=\"stacksize\">Your stacksize:</label>\n          <input type=\"number\" id=\"stacksize\" name=\"stacksize\" min=\"100\" max=\"2000\" value={this.state.stacksize} onChange={this.handleChange} />\n        </div>\n        <button>Start Your Game of BlackJack!</button>\n      </form>\n    )\n  }\n}\n","const deckOfCards = [\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"hearts\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"diamonds\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"clubs\",\n    \"rank\": \"A\",\n    \"value\": 11\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 2,\n    \"value\": 2\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 3,\n    \"value\": 3\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 4,\n    \"value\": 4\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 5,\n    \"value\": 5\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 6,\n    \"value\": 6\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 7,\n    \"value\": 7\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 8,\n    \"value\": 8\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 9,\n    \"value\": 9\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": 10,\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"J\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"Q\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"K\",\n    \"value\": 10\n  },\n  {\n    \"suit\": \"spades\",\n    \"rank\": \"A\",\n    \"value\": 11\n  }\n];\n\nconst fullDeck = [...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards, ...deckOfCards];\n\nexport default fullDeck;\n","import React, { Component } from 'react'\nimport Round from './Round'\nimport Bank from './Bank'\nimport Player from './Player'\nimport StartGameForm from './StartGameForm'\nimport fullDeck from '../data/deck'\nimport '../styling/Board.css'\n\nconst DECK = fullDeck.sort(() => 0.5 - Math.random());\n\nclass Board extends Component {\n  static defaultProps = {\n    bets: [10, 25, 50, 100, 200],\n    moves: ['hit', 'pass']\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deck: DECK,\n      gameHasStarted: true, // for testing purpose set to true (should be false)\n      player: {\n        id: 1,\n        name: 'Milly', // for testing purpose set to Milly (should be '')\n        stacksize: 1000, // for testing purpose set to 1000 (should be 0)\n        hands: []\n        // hands: [\n        //   { id: 0, cards: [DECK[2], DECK[3]], done: false },\n        //   { id: 1, cards: [DECK[4], DECK[5]], done: false },\n        //   { id: 2, cards: [DECK[6], DECK[7]], done: false }\n        // ]\n      },\n      bank: { hand: [] },\n      // bank: { hand: [DECK[0], DECK[1]] },\n      currentRound: { num: 0, bet: 0, active: false }\n      // rounds: [] // contains all previous rounds\n    }\n\n    this.resetGame = this.resetGame.bind(this)\n    this.startGame = this.startGame.bind(this)\n    this.dealCard = this.dealCard.bind(this)\n    this.doMove = this.doMove.bind(this)\n    this.doMoveHit = this.doMoveHit.bind(this)\n    this.doMovePass = this.doMovePass.bind(this)\n    this.doMoveSplit = this.doMoveSplit.bind(this)\n    this.doMoveDouble = this.doMoveDouble.bind(this)\n    this.endRound = this.endRound.bind(this)\n    this.startRound = this.startRound.bind(this)\n    this.doBet = this.doBet.bind(this)\n    \n  }\n\n  resetGame() {\n    console.log('reset game')\n  }\n\n  startGame( playerName, playerStacksize ) {\n    console.log('start game!')\n    this.setState(prevState => ({\n      gameHasStarted: true,\n      player: {...prevState.player, name: playerName, stacksize: playerStacksize }\n    }))\n  }\n\n  dealCard() {\n    console.log('deal card');\n    const tempDeck = this.state.deck;\n    const randomIndex = Math.floor(Math.random() * tempDeck.length);\n    //console.log('tempdeck-length', tempDeck.length, 'randomindex', randomIndex);\n    const card = tempDeck[randomIndex];\n    //console.log('card', card);\n    tempDeck.splice(randomIndex, 1);\n    //console.log('deck', tempDeck);\n    this.setState({ \n      deck: tempDeck \n    });\n    return card;\n  }\n\n  doMove(move, id) {\n    switch(move) {\n      case 'hit':\n        this.doMoveHit(id);\n        break;\n      case 'pass':\n        this.doMovePass(id);\n        break;\n      case 'split':\n        this.doMoveSplit(id);\n        break;\n      case 'double':\n        this.doMoveDouble(id);\n        break;\n      default:\n        console.log('default')\n    }\n  }\n\n  // TODO: consider moving this to Move.js or Hand.js\n  doMoveHit(id) {\n    console.log('do move hit')\n    const newCard = this.dealCard();\n    // map trough all hands, if hand has the right id, than return hand + new card\n    const tempHands = this.state.player.hands.map(hand =>\n      hand.id === id\n        ? { ...hand, cards: [...hand.cards, newCard] }\n        : hand\n    );\n    this.setState(prevState => ({\n      player: {...prevState.player, hands: tempHands}\n    }))\n  }\n\n  // TODO consider moving this to Move.js or Hand.js\n  doMovePass(id) {\n    console.log('do move pass')\n    // set current hand on 'done'\n    // TODO: check if all hands are done, then endRound\n    this.endRound();\n  }\n\n  doMoveSplit(id) {\n    console.log('do move split')\n  }\n\n  doMoveDouble(id) {\n    console.log('do move double')\n  }\n\n  endRound() {\n    console.log('end round')\n    // set currentRound to inactive\n    // bank gets cards till 17\n    // compare bank & player hands\n    // show winnings\n    // update stacksize\n    this.setState(prevState => ({\n      currentRound: { ...prevState.currentRound, active: false }\n    }))\n  }\n\n  startRound() {\n    console.log('start round')\n    const newRoundNum = this.state.currentRound.num + 1;\n    const dealtCardsToPlayer = [this.dealCard(), this.dealCard()];\n    const dealtCardToBank = [this.dealCard()];\n    this.setState(prevState => ({\n      currentRound: { ...prevState.currentRound, num: newRoundNum, active: true },\n      player: { ...prevState.player, hands: [{ id: 0, cards: dealtCardsToPlayer }] },\n      bank: { ...prevState.bank, hand: dealtCardToBank }\n    }))\n  }\n\n  doBet(bet) {\n    console.log('do bet:', bet)\n    const newStacksize = this.state.player.stacksize - bet;\n    this.setState(prevState => ({\n      currentRound: { ...prevState.currentRound, bet: bet },\n      player: { ...prevState.player, stacksize: newStacksize }\n    }))\n    console.log(this)\n    this.startRound();\n  }\n\n  render() {\n\n    const { moves, bets } = this.props;\n    const { gameHasStarted, player, bank, currentRound: round } = this.state;\n\n    return (\n      <div className=\"Board\">\n        <h1>Black Jack!</h1>\n        {gameHasStarted \n        ? <div>\n            <Round roundnr={round.num} bet={round.bet} resetGame={this.resetGame} />\n            <Bank hand={bank.hand} />\n            <div className=\"Board-players\">\n              <Player\n                name={player.name}\n                stacksize={player.stacksize}\n                moves={moves}\n                bets={bets}\n                doBet={this.doBet}\n                hands={player.hands}\n                roundActive={round.active}\n                doMove={this.doMove}\n              />\n            </div>\n          </div>\n          : <StartGameForm startGame={this.startGame} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Board\n","import './styling/App.css';\nimport Board from './components/Board'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}